% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_distance.R
\name{get_distance}
\alias{get_distance}
\title{Get network distance}
\usage{
get_distance(data, origins, destinations, mode = c("driving", "walking",
  "cycling", "transit"), departing = FALSE, model = c("best_guess",
  "pessimistic", "optimistic"),
  google_api_key = Sys.getenv("google_api_key"))
}
\arguments{
\item{address}{character string with address to be geocoded. Be as specific as possible to avoid ambiguity.}

\item{api_key}{character string containing api key for the google maps geocode api. You can generate one for free in your google cloud console.}

\item{verbose}{logical value. If TRUE, echos the input address}

\item{return_all}{logical value. Some locations may return more than one geocoded result. If you only want one row returned set return_all = F.}
}
\value{
a data.frame containing the coordinates, location type and approximate address.
}
\description{
Fetch the distance between sets of origins and destinations using Google Distance Matrix API
}
\examples{

## Example with a dataframe of origins (lat lng) and a single destination
df <- tibble::tribble(
~ lat, ~lng,
51.5131, -0.09182,
51.5037, -0.01715,
51.5320, -0.12343,
51.4447, -0.33749
)
origin_df <- mutate(df, origin = paste0(lat,',',lng))

get_distance(origin_df, origin, 'London Paddington')

# lat     lng origin           driving_distance driving_time
# <dbl>   <dbl> <chr>                       <dbl>        <dbl>
# 1  51.5 -0.0918 51.5131,-0.09182             7877         26.9
# 2  51.5 -0.0172 51.5037,-0.01715            13839         39.3
# 3  51.5 -0.123  51.532,-0.12343              5231         20.0
# 4  51.4 -0.337  51.4447,-0.33749            17944         38.4



## Example with a single dataframe containing postcodes and lat,lng coordinates
pcd_df <- tibble::tribble(
 ~ origin,           ~destination,
"51.5131,-0.09182", 'EC2R 8AH',
"51.5037,-0.01715", 'E14 5AB',
" 51.5320,-0.12343", 'SE1 9SG',
"51.4447,-0.33749", 'SW1A 1AA'
)

get_distance(pcd_df, origin, destination)

#   origin              destination driving_distance driving_time
#   <chr>               <chr>                  <dbl>        <dbl>
# 1 "51.5131,-0.09182"  EC2R 8AH                 515         3.4
# 2 "51.5037,-0.01715"  E14 5AB                  867         3.33
# 3 " 51.5320,-0.12343" SE1 9SG                 5747        24.0
# 4 "51.4447,-0.33749"  SW1A 1AA               16895        40.2

}
